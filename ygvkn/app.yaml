apiVersion: apps/v1
kind: Deployment
metadata:
 name: clj-app
 namespace: monitoring
 annotations:
  author: YGVKN
 labels:
  app: clj-app
spec:
 replicas: 1
 minReadySeconds: 33
 selector:
  matchLabels:
   app: clj-app
 strategy:
  type: RollingUpdate
  rollingUpdate:
   maxSurge: 1
   maxUnavailable: 0
 template:
  metadata:
   labels:
    app: clj-app
  spec:
   containers:
   - name: clj-app
     image: zhuzha/app
     env:
     - name: POD_NAME
       valueFrom:
        fieldRef:
         fieldPath: metadata.name
     - name: POD_NAMESPACE
       valueFrom:
        fieldRef:
         fieldPath: metadata.namespace
     - name: POD_IP
       valueFrom:
        fieldRef:
         fieldPath: status.podIP
     - name: POD_NODE
       valueFrom:
        fieldRef:
         fieldPath: spec.nodeName
     imagePullPolicy: IfNotPresent
     resources:
      limits:
       memory: "200Mi"
       cpu: "100m"
      requests:
       memory: "100Mi"
       cpu: "40m"
     ports:
     - name: app-port
       containerPort: 8888
     readinessProbe:
      httpGet:
       path: /
       port: app-port
      initialDelaySeconds: 22
      periodSeconds: 22
     livenessProbe:
      httpGet:
       path: /
       port: app-port
       httpHeaders:
       - name: Custom-Header
         value: Awesome
      initialDelaySeconds: 33
      periodSeconds: 33
#     startupProbe:
#      httpGet:
#       path: /
#       port: app-port
#      failureThreshold: 44
#      periodSeconds: 10
#     lifecycle:
#      postStart:
#       exec:
#        command: ["/bin/sh", "-c", "echo  \"{\"lifecycle_status\":\"OK\"}\" > /usr/share/lifecycle.json"]
#      preStop:
#       exec:
#        command: ["/bin/sh", "-c", "poweroff || exit 1"]
   terminationGracePeriodSeconds: 111

---

apiVersion: v1
kind: Service
metadata:
  name: clj-app-svc
  namespace: monitoring
  labels:
   app: clj-app
spec:
  type: NodePort
  ports:
  - name: svc-port
    port: 9999
    nodePort: 30300
    targetPort: app-port
    protocol: TCP
  selector:
    app: clj-app
...
